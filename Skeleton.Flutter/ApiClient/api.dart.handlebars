// generated by a tool
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:flutter_application_1/api/api_constants.dart';
import 'dart:developer';

{{#each ApiOperations}}
    {{#if HasCustomType}}
import '../model/{{snake_case ../Name}}/{{CustomType.DartFileName}}.dart';        
    {{/if}}
{{/each}}
{{#each DistinctOperationReturnTypesRelatedToParent}}
import '../model/{{snake_case ../Name}}/{{snake_case Name}}.dart';
{{/each}}
{{#each DistinctOperationReturnTypesRelatedToOther}}
import '../model/{{snake_Case Item2.Name}}/{{snake_case Item1.Name}}.dart';
{{/each}}

class {{ClientApiTypeName}} {

    late ApiUtil _apiUtil;

    {{ClientApiTypeName}}(ApiUtil apiUtil) {
        _apiUtil = apiUtil;
    }

	{{#each ApiOperations}}
	{{#if HasCustomType}}
	Future<{{{DartReturn}}}> {{cml_case BareName}}({{cs_name CustomType.Name}} model) async {
		var uri = "$baseAddress/api/{{kb_case ../Name}}/{{cs_name BareName}}";
		log("calling {{Name}} on $uri", name: "{{../ClientApiTypeName}}");
		{{#if ../IsAttachment}}
        var map = new Map<String, dynamic>();
        {{#each CustomType.Fields}}
        map['{{Name}}'] = model.{{cml_case Name}};   
        {{/each}}
		final response = await http.{{lc HttpMethod}}(Uri.parse(uri), headers: await _apiUtil.getHeaders(), body: map);
		{{else}}
		final response = await http.{{lc HttpMethod}}(Uri.parse(uri), headers: await _apiUtil.getHeaders(), body: model.toJson());
		{{/if}}
        if (_apiUtil.responseStatusIsSuccess(response.statusCode)){
		{{#if IsStructuredResult}}
            // TODO
        {{else}}    
            return {{DartSimpleTypeReturnCast}};
        } else {
            throw Exception('Failed to load'); // TODO - throw something more specific?
        }
		{{/if}}
	{{else}}
	Future<{{{DartReturn}}}> {{cml_case BareName}}({{#each UserProvidedParameters}} {{{ResolvedDartType}}} {{cml_case Name}}{{#unless @last}}, {{/unless}}{{/each}}) async { 
    {{#if ProvideDataByUri}}
        var uri = "$baseAddress/api/{{kb_case ../Name}}/{{cs_name BareName}}?{{#each UserProvidedParameters}}{{cml_case Name}}=${({{cml_case Name}})}{{#unless @last}}&{{/unless}}{{/each}}";
    {{else}}
        var uri = "$baseAddress/api/{{kb_case ../Name}}/{{cs_name BareName}}";
    {{/if}}
        log("calling {{Name}} on $uri", name: "{{../ClientApiTypeName}}");
    {{#if ProvideDataByUri}}
        final response = await http.{{lc HttpMethod}}(Uri.parse(uri), headers: await _apiUtil.getHeaders());
    {{else}}
        final response = await http.{{lc HttpMethod}}(Uri.parse(uri), headers: await _apiUtil.getHeaders(), {{#each UserProvidedParameters}}body: {{cml_case Name}}{{/each}});
    {{/if}}
        if (_apiUtil.responseStatusIsSuccess(response.statusCode)){
            {{#if SingleResult}}
                {{#if IsStructuredResult}}
        return {{{DartReturn}}}.fromJson(jsonDecode(response.body));
                {{else}}
        return {{DartSimpleTypeReturnCast}};
                {{/if}}    
            {{else}}
            Iterable l = json.decode(response.body);
            return {{{DartReturn}}}.from(l.map((model)=> {{ReturnTypeName}}.fromJson(model)));
            {{/if}}
        } else {
            throw Exception('Failed to load'); // TODO - throw something more specific?
        }
	{{/if}}
	}

	{{/each}} 

}