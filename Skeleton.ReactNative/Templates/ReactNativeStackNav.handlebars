// generated by a tool
import React from 'react';
import {createNativeStackNavigator} from '@react-navigation/native-stack';
import {useTheme} from '@react-navigation/native';
import {CustomHeader} from './controls/CustomHeader';

{{#each TypesThatHaveUI}}
import { {{cs_name SelectAllType.Name}}ListScreen } from './domain/{{kb_case Name}}/list/{{cml_case SelectAllType.Name}}ListScreen'
import { {{cs_name Name}}DetailScreen } from './domain/{{kb_case Name}}/{{cml_case Name}}DetailScreen'
{{/each}}

export type AppStackParamList = {
{{#each TypesThatHaveUI}}
    {{cs_name Name}}List: undefined;
    {{cs_name Name}}Detail: { {{#each KeyFields}}{{cml_case Name}} : {{get_ts_type ClrType}}{{/each}} };
{{/each}}
};

interface StackNavProps {
    routeName: keyof AppStackParamList | undefined;
}

const Stack = createNativeStackNavigator<AppStackParamList>();

export const StackNav = (props: StackNavProps):JSX.Element => {
    const theme = useTheme();
    return (
    <Stack.Navigator initialRouteName={props.routeName} screenOptions={ { headerStyle: {backgroundColor: theme.colors.primary}, headerTitle: navProp => <CustomHeader {...navProp} />} }>
        {{#each TypesThatHaveUI}}
        <Stack.Screen name="{{cs_name Name}}List" component={ {{cs_name SelectAllType.Name}}ListScreen } options={ {title: '{{HumanizedNamePlural}}' } } />
        <Stack.Screen name="{{cs_name Name}}Detail" component={ {{cs_name Name}}DetailScreen } options={ {title: '{{hmn Name}}' } } />
        {{/each}}
    </Stack.Navigator>
    );
}