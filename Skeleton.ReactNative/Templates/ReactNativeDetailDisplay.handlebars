// generated by a tool
import React, { Component } from 'react';
import { {{cs_name DetailType.Name}} } from './{{cs_name DetailType.Name}}';
import DateTimeDisplay from '../../controls/DateTimeDisplay';
import Thumbnail from '../../controls/thumbnail';
import Title from "../../controls/Title";
import {View, Text, Pressable} from 'react-native';
import {detailStyles} from '../../controls/DetailStyle';

interface {{cs_name Name}}DetailDisplayProps {
item: {{cs_name DetailType.Name}}
}

export const {{cs_name Name}}DetailDisplay = (props: {{cs_name Name}}DetailDisplayProps):React.ReactElement => {

{{#each DisplayFields}}
    {{#if IsLinkingFieldWithDetails}}
    function on{{cs_name LinkingField.Name}}Pressed() {
    
    }
    
    {{/if}}    
{{/each}}

return (
    <View style={detailStyles.container}>
        {{#each DisplayFields}}
        {{#if IsLinkingFieldWithDetails}}
            <Pressable style={({pressed}) => [
                {
                    padding: 10,
                    marginBottom: 1,
                    backgroundColor: pressed ? 'rgb(210, 230, 255)' : 'transparent',
                }, detailStyles.row]}  onPress={on{{cs_name LinkingField.Name}}Pressed}>
        {{else}}
            <View style={detailStyles.row}>
        {{/if}}
                <View style={detailStyles.fieldName}>
                    <Text>{{DisplayName}}</Text>
                </View>
                <View style={detailStyles.fieldValue}>
                    {{#if IsDateTime}}
                        <DateTimeDisplay date={ props.item.{{cml_case Name}} } />
                    {{else}}
                        {{#if IsBoolean}}
                            <Text>{ props.item.{{cml_case Name}} ? 'Yes' : 'No' }</Text>
                        {{else}}
                            {{#if IsColor}}
                                <View style={ { width: '18px', height: "18px", border: "black 1px solid", background: props.item.{{cml_case Name}} } as React.CSSProperties}></View>
                            {{else}}
                                {{#if IsRating}}
                                    <Rating value={ props.item.{{cml_case Name}} } readOnly />
                                {{else}}
                                    {{#if IsLinkingFieldToAttachmentWithThumbnail}}
                                        <Thumbnail id={ props.item.{{cml_case LinkingField.Name}} } name={ props.item.{{cml_case Name}} } entityName="{{kb_case RelatedType.Name}}" />
                                    {{else}}
                                        {{#if IsFile}}
                                            <Thumbnail id={ props.item.{{cml_case Type.IdentityField.Name}} } name={ props.item.{{cml_case Name}} } entityName="{{kb_case Type.Name}}" />
                                        {{else}}
                                            {{#if IsHtml}}
                                                <Interweave content={ props.item.{{cml_case Name}} } />
                                            {{else}}
                                                <Text>{ props.item.{{cml_case Name}} }</Text>
                                            {{/if}}
                                        {{/if}}
                                    {{/if}}
                                {{/if}}
                            {{/if}}
                        {{/if}}
                    {{/if}}
                </View>
            {{#if IsLinkingFieldWithDetails}}
            </Pressable>
            {{else}}
            </View>
            {{/if}}
        {{/each}}
    </View>);
}

