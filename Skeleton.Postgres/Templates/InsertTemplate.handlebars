-- generated by a tool
SET search_path TO {{{escape_sql Namespace}}};

CREATE OR REPLACE FUNCTION {{{escape_sql FunctionName}}} (
{{#each InsertInputFields}}
{{{escape_sql Name}}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}
{{#if UsesCustomInsertType}}
{{#if HasInsertInputFields}},{{/if}}{{{escape_sql NewRecordParameterName}}} {{{escape_sql_name NewTypeName}}}
{{/if}}
) RETURNS {{PrimaryKeyField.ProviderTypeName}}{{#if PrimaryKeyField.HasSize}}({{PrimaryKeyField.Size}}){{/if}} AS 
$$
    DECLARE new_id {{PrimaryKeyField.ProviderTypeName}}{{#if PrimaryKeyField.HasSize}}({{PrimaryKeyField.Size}}){{/if}};
 
    BEGIN

        {{#if Domain.HasUserType}}
        IF (security_user_id_param is not null) THEN
            perform set_config('app.user_id', security_user_id_param::text, true);
        END IF;
        {{/if}}

        {{#if PrimaryKeyField.IsGenerated}}
        {{#if PrimaryKeyField.IsUuid}}
            new_id = uuid_generate_v1();
        {{/if}}
        {{/if}}

        insert into {{{escape_sql Name}}} (
            {{#each InsertFields}}
            {{{escape_sql Name}}}{{#unless @last}},{{/unless}}
            {{/each}}
        )
        VALUES
        (
            {{#each InsertFields}}
            {{{Value}}}{{#unless @last}},{{/unless}}
            {{/each}}
        );

		{{#if PrimaryKeyField.IsInt}}
        new_id = currval(pg_get_serial_sequence('{{Name}}', 'id'));
        {{else}}
            {{#if PrimaryKeyField.IsUserEditable}}
                {{#if UsesCustomInsertType}}
        new_id = {{{escape_sql NewRecordParameterName}}}.{{{escape_sql PrimaryKeyField.Name}}};
                {{else}}
        new_id = {{FunctionName}}.{{PrimaryKeyField.Name}};
                {{/if}}
            {{/if}}        
		{{/if}}

        return new_id;
    END
$$
  LANGUAGE plpgsql VOLATILE SECURITY INVOKER
  COST 100;

{{#if UseDbRoleForSecurity}}
REVOKE ALL ON FUNCTION {{{escape_sql FunctionName}}} ({{#each InsertInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}{{/each}}{{#if UsesCustomInsertType}}{{#if HasInsertInputFields}} ,{{/if}}{{{escape_sql_name NewTypeName}}}{{/if}}) FROM public;
GRANT EXECUTE ON FUNCTION {{{escape_sql FunctionName}}} ({{#each InsertInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}{{/each}}{{#if UsesCustomInsertType}}{{#if HasInsertInputFields}} ,{{/if}}{{{escape_sql_name NewTypeName}}}{{/if}}) TO web_app_role;
{{/if}}

COMMENT ON FUNCTION {{{escape_sql FunctionName}}} ({{#each InsertInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}{{/each}}{{#if UsesCustomInsertType}}{{#if HasInsertInputFields}} ,{{/if}}{{{escape_sql_name NewTypeName}}}{{/if}})
    IS '{"applicationtype":"{{Name}}", "generated":true, "changesData":true, "friendlyName":"Add", "fullName":"{{FunctionName}}", "createsNew":true {{#if NoAddUI}},"ui":false, "api":false {{/if}} }';
