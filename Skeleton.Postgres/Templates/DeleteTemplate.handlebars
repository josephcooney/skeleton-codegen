-- generated by a tool
SET search_path TO {{{escape_sql Namespace}}};

CREATE OR REPLACE FUNCTION {{FunctionName}} (
{{#each DeleteInputFields}}
{{{escape_sql Name}}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}
) RETURNS void AS
$$

    BEGIN

        IF (security_user_id_param is not null) THEN
		    perform set_config('app.user_id', security_user_id_param::text, true);
        END IF;

        DELETE FROM {{{escape_sql Name}}}
        WHERE
        {{#each PrimaryKeyFields}}
            {{{escape_sql Parent.Name}}}.{{{escape_sql Name}}} = {{{escape_sql Parent.FunctionName}}}.{{{escape_sql Name}}}{{#unless @last}} AND{{/unless}}{{/each}};
        
    END
$$
  LANGUAGE plpgsql VOLATILE SECURITY INVOKER
  COST 100;

REVOKE ALL ON FUNCTION {{FunctionName}} ({{#each DeleteInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) FROM public;

GRANT EXECUTE ON FUNCTION {{FunctionName}} ({{#each DeleteInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) TO web_app_role;

COMMENT ON FUNCTION {{FunctionName}} ({{#each DeleteInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}})
    IS '{"applicationtype":"{{Name}}", "generated":true, "changesData":true, "fullName":"{{FunctionName}}"}';