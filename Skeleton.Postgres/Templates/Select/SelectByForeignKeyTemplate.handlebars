-- generated by a tool
SET search_path TO {{{escape_sql_keyword Namespace}}};

drop function if exists {{{escape_sql_keyword FunctionName}}};

CREATE OR REPLACE FUNCTION {{{escape_sql_keyword FunctionName}}} (
{{#each SelectInputFields}}
{{{escape_sql_keyword Name}}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}
)
RETURNS {{#unless ReturnsSingle}}SETOF {{/unless}}{{{ResultTypeName}}} AS
$$
{{#if ReturnsSingle}}DECLARE result {{{ResultTypeName}}};{{/if}}
    BEGIN

    {{#if Domain.HasUserType}}
        IF (security_user_id_param is not null) THEN
            perform set_config('app.user_id', security_user_id_param::text, true);
        END IF;
    {{/if}}

        {{#unless ReturnsSingle}}RETURN QUERY{{/unless}}
        SELECT
            {{#each Fields}}
            {{{escape_sql_keyword Parent.Name}}}.{{{escape_sql_keyword Name}}}{{#unless @last}},{{/unless}}
            {{/each}}
        FROM {{{escape_sql_keyword Name}}}
        WHERE 
        {{#each SelectFields}}
        {{{escape_sql_keyword Parent.Name}}}.{{{escape_sql_keyword Name}}} = {{{escape_sql_keyword Parent.FunctionName}}}.{{{escape_sql_keyword Name}}} {{#unless @last}}AND{{/unless}}{{#unless ../SoftDelete}}{{#if ../ReturnsSingle}} into result{{/if}};{{/unless}}
        {{/each}}
		{{#if SoftDelete}}
        AND deleted_date is NULL {{#if ReturnsSingle}} into result{{/if}};
        {{/if}}
        {{#if ReturnsSingle}}RETURN result;{{/if}}
    END
$$
  LANGUAGE plpgsql STABLE SECURITY INVOKER
  COST 100;

REVOKE ALL ON FUNCTION {{{escape_sql_keyword FunctionName}}} ({{#each SelectInputFields}}{{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}{{/each}}) FROM public;

GRANT EXECUTE ON FUNCTION {{{escape_sql_keyword FunctionName}}} ({{#each SelectInputFields}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) TO web_app_role;

COMMENT ON FUNCTION {{{escape_sql_keyword FunctionName}}} ({{#each SelectInputFields}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}})
    IS '{"applicationtype":"{{Name}}", "generated":true, "fullName":"{{FunctionName}}" {{#if ReturnsSingle}}, "single_result":true{{/if}} }';