-- generated by a tool
SET search_path TO {{{escape_sql_keyword Namespace}}};

drop function if exists {{FunctionName}};

CREATE OR REPLACE FUNCTION {{FunctionName}} (
{{#each SelectInputFields}}
{{{escape_sql_keyword Name}}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}
) 
{{#if HasExcludedFields}}
RETURNS SETOF {{Name}}_result AS 
{{else}}
RETURNS SETOF {{{escape_sql_keyword Name}}} AS
{{/if}}
$$
    DECLARE query_txt text;
    BEGIN
		
        IF (security_user_id_param is not null) THEN
		    perform set_config('app.user_id', security_user_id_param::text, true);
        END IF;

        query_txt = '
        SELECT
            {{#each Fields}}
            {{{escape_sql_keyword Parent.Name}}}.{{{escape_sql_keyword Name}}}{{#unless @last}},{{/unless}}
            {{/each}}
        FROM {{{escape_sql_keyword Name}}}
        WHERE 
        {{#each SelectFieldsWithIndices}}
        {{{escape_sql_keyword Field.Parent.Name}}}.{{{escape_sql_keyword Field.Name}}} = ${{Index}} {{#unless @last}}AND{{/unless}}
        {{/each}}
		{{#if SoftDelete}}
        AND deleted_date is NULL
        {{/if}}
        ORDER BY ' || coalesce(quote_ident({{SortField.Name}}), '{{{escape_sql_keyword PrimaryKeyField.Name}}}');

        IF ({{SortDescendingField.Name}} = true) THEN
            query_txt = query_txt || ' DESC ';
        END IF;
        
        query_txt = query_txt || ' LIMIT ${{PageSizeParameterIndex}} OFFSET ${{OffsetIndex}}';
        
        RETURN QUERY EXECUTE query_txt
        USING {{#each SelectFields}} {{escape_sql_keyword Parent.FunctionName}}.{{{escape_sql_keyword Name}}},{{/each}} {{PageSizeField.Name}}, {{PageSizeField.Name}} * {{PageNumberField.Name}};

    END
$$
  LANGUAGE plpgsql STABLE SECURITY INVOKER
  COST 100;

REVOKE ALL ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}}{{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}{{/each}}) FROM public;

GRANT EXECUTE ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) TO web_app_role;

COMMENT ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}})
    IS '{"applicationtype":"{{Name}}", "generated":true, "fullName":"{{FunctionName}}", "paged":true }';