-- generated by a tool
SET search_path TO {{{escape_sql Namespace}}};

drop function if exists {{FunctionName}};

CREATE OR REPLACE FUNCTION {{FunctionName}} (
{{#each SelectInputFields}}
    {{{escape_sql Name}}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}
)
{{#if HasExcludedFields}}
    RETURNS SETOF {{{make_db_name Name "result"}}} AS
{{else}}
    RETURNS SETOF {{{escape_sql Name}}} AS
{{/if}}
$$

DECLARE query_txt text;

BEGIN

    IF ({{SortParameter.Name}} is not null and {{SortParameter.Name}} not in ({{#each Fields}}'{{{Name}}}'{{#unless @last}},{{/unless}}{{/each}})) THEN
        RAISE 'Invalid sort: %', {{SortParameter.Name}};
    END IF;

{{#if Domain.HasUserType}}
    IF (security_user_id_param is not null) THEN
        perform set_config('app.user_id', security_user_id_param::text, true);
    END IF;
{{/if}}

query_txt = '
SELECT
{{#if HasExcludedFields}}
    {{#each Fields}}
        {{../ShortName}}.{{{escape_sql Name}}}{{#unless @last}},{{/unless}}
    {{/each}}
{{else}}
    {{ShortName}}.*
{{/if}}
FROM {{{escape_sql Name}}} {{ShortName}}
{{#if SoftDelete}}
    WHERE deleted_date is NULL
{{/if}}
ORDER BY ' || coalesce(quote_ident({{SortParameter.Name}}), '{{{escape_sql PrimaryKeyField.Name}}}');

IF ({{SortDescendingField.Name}} = true) THEN
query_txt = query_txt || ' DESC ';
END IF;

query_txt = query_txt || ' LIMIT $1 OFFSET $2';

RETURN QUERY EXECUTE query_txt
USING {{PageSizeField.Name}}, {{PageSizeField.Name}} * {{PageNumberField.Name}};

END
$$
LANGUAGE plpgsql STABLE SECURITY INVOKER
COST 100;

REVOKE ALL ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) FROM public;

GRANT EXECUTE ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) TO web_app_role;

COMMENT ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{{escape_sql_name ProviderTypeName}}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}})
IS '{"applicationtype":"{{Name}}", "generated":true, "fullName":"{{FunctionName}}", "paged":true}';
