-- generated by a tool
SET search_path TO {{{escape_sql_keyword Namespace}}};

drop function if exists {{FunctionName}};

CREATE OR REPLACE FUNCTION {{FunctionName}} (
{{#each SelectInputFields}}
{{{escape_sql_keyword Name}}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}
) 
RETURNS SETOF {{Name}}_display AS
$$
    DECLARE query_txt text;
    
    BEGIN

        IF (security_user_id_param is not null) THEN
		    perform set_config('app.user_id', security_user_id_param::text, true);
        END IF;

        query_txt = '
        SELECT
            {{#each DisplayAllFields}}
            {{ParentAlias}}.{{{escape_sql_keyword Name}}}{{#if HasDisplayName}} AS {{{escape_sql_keyword DisplayName}}}{{/if}}{{#unless @last}},{{/unless}}
            {{/each}}
        FROM {{{escape_sql_keyword Name}}} {{ShortName}}
        {{#each RelatedFields}}
        LEFT JOIN {{{escape_sql_keyword Field.ReferencesType.Name}}} AS {{ParentAlias}} ON {{PrimaryAlias}}.{{escape_sql_keyword Field.Name}} = {{ParentAlias}}.{{{escape_sql_keyword Field.ReferencesTypeField.Name}}} 
        {{/each}}
        {{#if FilterListOperation}}
        WHERE {{OwnershipExpression}}
            {{#if SoftDelete}}
        AND {{ShortName}}.deleted_date is NULL
            {{/if}}        
        {{else}}
            {{#if SoftDelete}}
        WHERE {{ShortName}}.deleted_date is NULL
            {{/if}}
        {{/if}}
        ORDER BY ' || coalesce(quote_ident({{SortField.Name}}), '{{{escape_sql_keyword PrimaryKeyField.Name}}}');

        IF ({{SortDescendingField.Name}} = true) THEN
            query_txt = query_txt || ' DESC ';
        END IF;

        query_txt = query_txt || ' LIMIT $1 OFFSET $2';
        
        RETURN QUERY EXECUTE query_txt
        USING {{PageSizeField.Name}}, {{PageSizeField.Name}} * {{PageNumberField.Name}};

    END
$$
  LANGUAGE plpgsql STABLE SECURITY INVOKER
  COST 100;

REVOKE ALL ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) FROM public;

GRANT EXECUTE ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}}) TO web_app_role;

COMMENT ON FUNCTION {{FunctionName}} ({{#each SelectInputFields}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}} {{/each}})
    IS '{"applicationtype":"{{Name}}", "generated":true, "fullName":"{{FunctionName}}", "returnTypeName":"{{Name}}_select_for_display_result", "paged":true}';
