-- generated by a tool
SET search_path TO {{{escape_sql_keyword Namespace}}};

alter table {{{escape_sql_keyword Name}}} enable row level security;

drop policy if exists {{Name}}_policy on {{{escape_sql_keyword Name}}};

drop policy if exists {{Name}}_select_policy on {{{escape_sql_keyword Name}}};

drop policy if exists {{Name}}_insert_policy on {{{escape_sql_keyword Name}}};

drop policy if exists {{Name}}_update_policy on {{{escape_sql_keyword Name}}};

drop policy if exists {{Name}}_delete_policy on {{{escape_sql_keyword Name}}};

-- select policy
create policy {{Name}}_select_policy
on {{{escape_sql_keyword Name}}}
FOR SELECT
USING
(
{{#if UnderlyingType.IsReferenceData}}
(TRUE) -- anyone can read reference data
{{else}}
	{{#if AllowAnonView}}
	(TRUE) -- anon can read {{Name}}
	{{else}}
		{{#if AllowUserReadAll}}
	(
	-- authenticated users can read {{Name}}
	current_setting('app.user_id', 't') is not null
	) 
		{{else}}
			{{#if AllowUserView}}
	(
	-- owning users can read
	{{OwnershipExpression}}
	)
	OR
			{{/if}}
	(
		-- allow admin to read
		select true
		from {{{escape_sql_keyword UserType.Namespace}}}.{{{escape_sql_keyword UserType.Name}}} u
		left join {{{escape_sql_keyword UserType.Namespace}}}."AspNetUserClaims" c
		on u.aspnet_user_id = c."UserId"
		where c."ClaimType" = 'role'
		and c."ClaimValue" = 'admin'
		and u.id = current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}}
	)
	OR current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}} = 1 -- 'system' user can read anything
		{{/if}}
	{{/if}}
{{/if}}
);

-- insert policy
create policy {{Name}}_insert_policy
on {{{escape_sql_keyword Name}}}
FOR INSERT
WITH CHECK
(
{{#if UnderlyingType.IsReferenceData}}
	(
		-- allow admin to modify reference data
		select true
		from {{{escape_sql_keyword UserType.Namespace}}}.{{{escape_sql_keyword UserType.Name}}} u
		left join {{{escape_sql_keyword UserType.Namespace}}}."AspNetUserClaims" c
		on u.aspnet_user_id = c."UserId"
		where c."ClaimType" = 'role'
		and c."ClaimValue" = 'admin'
		and u.id = current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}}
	)
	OR current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}} = 1 -- 'system' user can also modify reference data 
{{else}}
	{{#if AllowAnonAdd}}
	(TRUE) -- anon can add
	{{else}}
		{{#if AllowUserAdd}}
	(
	-- authenticated users can add
	current_setting('app.user_id', 't') is not null
	) 
		{{else}}
	(
		-- allow admin to modify data
		select true
		from {{{escape_sql_keyword UserType.Namespace}}}.{{{escape_sql_keyword UserType.Name}}} u
		left join {{{escape_sql_keyword UserType.Namespace}}}."AspNetUserClaims" c
		on u.aspnet_user_id = c."UserId"
		where c."ClaimType" = 'role'
		and c."ClaimValue" = 'admin'
		and u.id = current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}}
	)
	OR current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}} = 1 -- 'system' user can insert into anything

		{{/if}}
	{{/if}}
{{/if}}
);

-- update policy
create policy {{Name}}_update_policy
on {{{escape_sql_keyword Name}}}
FOR UPDATE
USING 
(
{{#if UnderlyingType.IsReferenceData}}
	(
		-- allow admin to modify reference data
		select true
		from {{{escape_sql_keyword UserType.Namespace}}}.{{{escape_sql_keyword UserType.Name}}} u
		left join {{{escape_sql_keyword UserType.Namespace}}}."AspNetUserClaims" c
		on u.aspnet_user_id = c."UserId"
		where c."ClaimType" = 'role'
		and c."ClaimValue" = 'admin'
		and u.id = current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}}
	)
	OR current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}} = 1 -- 'system' user can also modify reference data 
{{else}}
	{{#if AllowAnonEdit}}
	(TRUE) -- anon can edit
	{{else}}
		{{#if AllowUserEditAll}}
	(
	-- authenticated users can edit 
	current_setting('app.user_id', 't') is not null
	) 
		{{else}}
			{{#if AllowUserEdit}}
	-- users can edit the {{Name}} they own	
	{{OwnershipExpression}}
	OR
			{{/if}}
	(
		-- admin can update {{Name}}
		select true
		from {{{escape_sql_keyword UserType.Namespace}}}.{{{escape_sql_keyword UserType.Name}}} u
		left join {{{escape_sql_keyword UserType.Namespace}}}."AspNetUserClaims" c
		on u.aspnet_user_id = c."UserId"
		where c."ClaimType" = 'role'
		and c."ClaimValue" = 'admin'
		and u.id = current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}}
	)
	OR current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}} = 1 -- 'system' user can update anything
		{{/if}}
	{{/if}}
{{/if}}
);

{{#if HardDelete}}

-- delete policy
create policy {{Name}}_delete_policy
on {{{escape_sql_keyword Name}}}
FOR DELETE
USING
(
{{#if UnderlyingType.IsReferenceData}}
	(
		-- admin can delete {{Name}} reference data
		select true
		from {{{escape_sql_keyword UserType.Namespace}}}.{{{escape_sql_keyword UserType.Name}}} u
		left join {{{escape_sql_keyword UserType.Namespace}}}."AspNetUserClaims" c
		on u.aspnet_user_id = c."UserId"
		where c."ClaimType" = 'role'
		and c."ClaimValue" = 'admin'
		and u.id = current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}}
	)
	OR current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}} = 1 -- 'system' user can also modify reference data 
{{else}}
	{{#if AllowAnonDelete}}
	(TRUE) -- anon can delete
	{{else}}
			{{#if AllowUserDelete}}
	-- users can edit the {{Name}} they own	
	{{OwnershipExpression}}
	OR
			{{/if}}
	(
		-- admin can delete {{Name}}
		select true
		from {{{escape_sql_keyword UserType.Namespace}}}.{{{escape_sql_keyword UserType.Name}}} u
		left join {{{escape_sql_keyword UserType.Namespace}}}."AspNetUserClaims" c
		on u.aspnet_user_id = c."UserId"
		where c."ClaimType" = 'role'
		and c."ClaimValue" = 'admin'
		and u.id = current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}}
	)
	OR current_setting('app.user_id', 't')::{{UserIdField.ProviderTypeName}} = 1 -- 'system' user can delete anything
		{{/if}}
{{/if}}
);
{{/if}}

