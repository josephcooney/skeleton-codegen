-- generated by a tool

CREATE OR ALTER PROCEDURE {{{escape_sql_keyword Namespace}}}.{{FunctionName}} 
{{#each SelectInputFields}}
    @{{{Name}}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}

AS
BEGIN

    SET ROWCOUNT @{{PageSizeField.Name}};

    SELECT
    {{#if HasExcludedFields}}
        {{#each Fields}}
            {{../ShortName}}.{{{escape_sql_keyword Name}}}{{#unless @last}},{{/unless}}
        {{/each}}
    {{else}}
        {{ShortName}}.*
    {{/if}}
    FROM {{{escape_sql_keyword Name}}} {{ShortName}}
    {{#if SoftDelete}}
        WHERE deleted_date is NULL
    {{/if}}
    ORDER BY
{{#each Fields}}
        CASE WHEN @{{../SortField.Name}} = '{{{Name}}}' AND @{{../SortDescendingField.Name}} = 0 THEN {{{escape_sql_keyword Name}}} END ASC,
        CASE WHEN @{{../SortField.Name}} = '{{{Name}}}' AND @{{../SortDescendingField.Name}} = 1 THEN {{{escape_sql_keyword Name}}} END DESC,
{{/each}}
        CASE WHEN @{{SortField.Name}} IS NULL THEN {{{escape_sql_keyword PrimaryKeyField.Name}}} END
    OFFSET @{{PageSizeField.Name}} * @{{PageNumberField.Name}} ROWS;

    SET ROWCOUNT 0;
END;

REVOKE ALL ON OBJECT::{{{escape_sql_keyword Namespace}}}.{{FunctionName}} FROM public;
GO

GRANT EXECUTE ON OBJECT::{{{escape_sql_keyword Namespace}}}.{{FunctionName}} TO web_app_role;
GO

EXEC sys.sp_addextendedproperty @name=N'codegen_meta', @value=N'{"applicationtype":"{{Name}}", "generated":true, "fullName":"{{FunctionName}}", "paged":true}', @level0type=N'SCHEMA', @level0name=N'{{Namespace}}', @level1type=N'PROCEDURE', @level1name=N'{{FunctionName}}';
