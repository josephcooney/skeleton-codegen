-- generated by a tool

CREATE OR ALTER PROCEDURE {{{escape_sql_keyword Namespace}}}.{{FunctionName}}
{{#each SelectInputFields}}
    @{{{Name}}} {{ProviderTypeName}}{{#if HasSize}}({{Size}}){{/if}}{{#unless @last}},{{/unless}}
{{/each}}
AS
BEGIN

    SET ROWCOUNT @{{PageSizeField.Name}};

    IF @{{SortDescendingField.Name}} = 1
        BEGIN
            SELECT
                {{#each DisplayAllFields}}
                {{ParentAlias}}.{{{escape_sql_keyword Name}}}{{#if HasDisplayName}} AS {{{escape_sql_keyword DisplayName}}}{{/if}}{{#unless @last}},{{/unless}}
                {{/each}}
            FROM {{{escape_sql_keyword Namespace}}}.{{{escape_sql_keyword Name}}} {{ShortName}}
            {{#each RelatedFields}}
            LEFT JOIN {{{escape_sql_keyword Field.ReferencesType.Namespace}}}.{{{escape_sql_keyword Field.ReferencesType.Name}}} AS {{ParentAlias}} ON {{PrimaryAlias}}.{{escape_sql_keyword Field.Name}} = {{ParentAlias}}.{{{escape_sql_keyword Field.ReferencesTypeField.Name}}} 
            {{/each}}
            {{#if FilterListOperation}}
            WHERE {{OwnershipExpression}}
                {{#if SoftDelete}}
            AND {{ShortName}}.deleted_date is NULL
                {{/if}}        
            {{else}}
                {{#if SoftDelete}}
            WHERE {{ShortName}}.deleted_date is NULL
                {{/if}}
            {{/if}}
            ORDER BY CASE
            {{#each DisplayAllSortFields}}
                WHEN @{{../SortParameter.Name}} = '{{{DisplayName}}}' THEN {{{SortExpressionWithParentAlias}}}
            {{/each}}
                ELSE {{PrimaryKeyField.ParentAlias}}.{{PrimaryKeyField.Name}}
            END
            DESC
            OFFSET @{{PageSizeField.Name}} * @{{PageNumberField.Name}} ROWS;
        END
    ELSE
        BEGIN
            SELECT
            {{#each DisplayAllFields}}
                {{ParentAlias}}.{{{escape_sql_keyword Name}}}{{#if HasDisplayName}} AS {{{escape_sql_keyword DisplayName}}}{{/if}}{{#unless @last}},{{/unless}}
            {{/each}}
            FROM {{{escape_sql_keyword Namespace}}}.{{{escape_sql_keyword Name}}} {{ShortName}}
            {{#each RelatedFields}}
                LEFT JOIN {{{escape_sql_keyword Field.ReferencesType.Namespace}}}.{{{escape_sql_keyword Field.ReferencesType.Name}}} AS {{ParentAlias}} ON {{PrimaryAlias}}.{{escape_sql_keyword Field.Name}} = {{ParentAlias}}.{{{escape_sql_keyword Field.ReferencesTypeField.Name}}}
            {{/each}}
            {{#if FilterListOperation}}
                WHERE {{OwnershipExpression}}
                {{#if SoftDelete}}
                    AND {{ShortName}}.deleted_date is NULL
                {{/if}}
            {{else}}
                {{#if SoftDelete}}
                    WHERE {{ShortName}}.deleted_date is NULL
                {{/if}}
            {{/if}}
            ORDER BY CASE
            {{#each DisplayAllSortFields}}
                WHEN @{{../SortParameter.Name}} = '{{{DisplayName}}}' THEN {{{SortExpressionWithParentAlias}}}
            {{/each}}
                ELSE {{PrimaryKeyField.ParentAlias}}.{{PrimaryKeyField.Name}}
            END
            OFFSET @{{PageSizeField.Name}} * @{{PageNumberField.Name}} ROWS;
        END
    SET ROWCOUNT 0;
END

REVOKE ALL ON OBJECT::{{{escape_sql_keyword Namespace}}}.{{FunctionName}} FROM public;
GO

GRANT EXECUTE ON OBJECT::{{{escape_sql_keyword Namespace}}}.{{FunctionName}} TO web_app_role;
GO

EXEC sys.sp_addextendedproperty @name=N'codegen_meta', @value=N'{"applicationtype":"{{Name}}", "generated":true, "fullName":"{{FunctionName}}", "paged":true, "returnTypeName":"{{Name}}Display"}', @level0type=N'SCHEMA', @level0name=N'{{Namespace}}', @level1type=N'PROCEDURE', @level1name=N'{{FunctionName}}';
