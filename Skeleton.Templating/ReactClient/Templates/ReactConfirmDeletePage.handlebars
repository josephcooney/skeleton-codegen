// generated by a tool
import React from 'react';
import { {{ClientApiInterfaceName}}, {{ClientApiTypeName}}, {{ClientApiTypeName}}QueryKeys } from './{{cml_case Name}}ApiClient';
import { {{cs_name SelectAllType.Name}} } from './{{cs_name SelectAllType.Name}}';
import { {{cs_name Name}}DetailDisplay } from './{{ts_file_name Name}}DetailDisplay';
import DeleteIcon from '@mui/icons-material/Delete';
import {useNavigate, useLocation} from "react-router-dom";
import {Button, Grid} from "@mui/material";
import { useQueryClient } from "@tanstack/react-query";

interface I{{cs_name Name}}DeleteProps {
    api? : {{ClientApiInterfaceName}} | null;
}

interface I{{cs_name Name}}DeleteState {
    data : {{cs_name SelectAllType.Name}};
}

export const {{cs_name Name}}ConfirmDelete = (props: I{{cs_name Name}}DeleteProps):React.ReactElement => {

    const api: {{ClientApiInterfaceName}} = props.api ? props.api : new {{ClientApiTypeName}}();
    const state = useLocation().state as unknown as I{{cs_name Name}}DeleteState;
    const navigate = useNavigate();
    const data : {{cs_name SelectAllType.Name}} = state.data;
    const queryClient = useQueryClient();

	const cancelDelete = (event: any) => {
		navigate(-1);
	}

    const confirmDelete = (event : any) => {
		api.delete(data.id).then(data => {
            {{ClientApiTypeName}}QueryKeys.invalidateAll(queryClient);
            navigate(-1);
        });
        event.preventDefault();
    }

    return (
            <div>
                <h1>Confirm Delete of {{hmn Name}}</h1>
                <div className="alert alert-danger" role="alert">
                  Are you sure you want to delete this {{hmn Name}}? Click the 'delete' button below to confirm deletion.
                </div>
                <Grid container spacing={2}>
                    <Grid item xs={12}>
                        <{{cs_name Name}}DetailDisplay item={data} />
                    </Grid>
                    <Grid item xs={12}>
                        <Grid container spacing={2} justifyContent="flex-end">
                            <Grid item>
                                <Button variant="outlined" onClick={cancelDelete}>Cancel</Button>
                            </Grid>
                            <Grid item>
                                <Button variant="contained" onClick={confirmDelete} color="error" startIcon={<DeleteIcon />}>Delete</Button>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </div>
    );
}