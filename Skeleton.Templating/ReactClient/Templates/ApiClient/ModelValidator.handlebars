// generated by a tool
import { FormikErrors, setIn } from 'formik';

{{#each OperationsWithUI}}
{{#if ChangesData}}
{{#if UsesModel}}
import { {{cs_name Name}}{{OperationName}}Model } from "./{{cs_name Name}}{{OperationName}}Model";
{{else}}
import { I{{cs_name RelatedType.Name}}{{FriendlyName}}State } from './{{cml_case RelatedType.Name}}{{FriendlyName}}';
{{/if}}
{{/if}}
{{/each}}

export class {{cs_name Name}}Validate {

	{{#each OperationsWithUI}}
	{{#if ChangesData}}
	{{#if UsesModel}}
	public validate{{cs_name BareName}}(state: {{cs_name Name}}{{OperationName}}Model) : FormikErrors<{{cs_name Name}}{{OperationName}}Model> {
		let errors: FormikErrors<{{cs_name Name}}{{OperationName}}Model> = {};

		{{#each UserProvidedParameters}}
		{{#if RelatedTypeField.IsRequired}}
		{{#if IsBoolean}}
		if (state.{{cml_case Name}} == null){
		{{else}}
		if (!state.{{cml_case Name}}){
		{{/if}}
			errors.{{cml_case Name}} = "{{hmn}} is required";
		}
		{{/if}}
		{{/each}}

        return errors;
	}
	
	{{else}}
	public validate{{cs_name BareName}}(state: I{{cs_name RelatedType.Name}}{{FriendlyName}}State): FormikErrors<I{{cs_name RelatedType.Name}}{{FriendlyName}}State> {
        console.log('validating');
        let errors: FormikErrors<I{{cs_name RelatedType.Name}}{{FriendlyName}}State> = {};

		{{#each UserProvidedParameters}}
            {{#if IsCustomTypeOrCustomArray}}
                {{#each ClientCustomType.Fields}}
                    {{#if IsRequired}}
                        {{#if IsBoolean}}
            if (!state.{{cml_case ../Name}} || state.{{cml_case ../Name}}.{{cml_case Name}} == null) {
                        {{else}}
            if (!state.{{cml_case ../Name}} || !state.{{cml_case ../Name}}.{{cml_case Name}}) {
                        {{/if}}
                errors = setIn(errors, '{{cml_case ../Name}}.{{cml_case Name}}', '{{hmn Name}} is required');   
            }            
                    {{/if}} 
                {{/each}}
            {{else}}
                {{#if RelatedTypeField.IsRequired}}
                    {{#if IsBoolean}}
            if (state.{{cml_case Name}} == null){
                    {{else}}
            if (!state.{{cml_case Name}}){
                    {{/if}}
               errors.{{cml_case Name}} = "{{hmn}} is required";
            }
                {{/if}}
            {{/if}}
		{{/each}}

        return errors;
    }

	{{/if}}
	{{/if}}
	{{/each}}
}