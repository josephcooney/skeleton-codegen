// generated by a tool
import { Route, Routes } from 'react-router';
{{#if Paged}}
import { {{cs_name SelectAllType.Name}}ListPaged } from './list/{{cml_case SelectAllType.Name}}ListPaged';
{{else}}    
import { {{cs_name SelectAllType.Name}}List } from './list/{{cml_case SelectAllType.Name}}List';
{{/if}}
import {NotFound} from "../../notFound";
{{#if CanDelete}}
import { {{cs_name Name}}ConfirmDelete } from './{{cml_case Name}}ConfirmDelete';
{{/if}}
{{#if HasDetails}}
import { {{cs_name Name}}Detail } from './{{cml_case Name}}Detail';
{{/if}}
{{#each OperationsWithUIThatChangeData}}
import { {{cs_name RelatedType.Name}}{{FriendlyName}} } from './{{cml_case RelatedType.Name}}{{FriendlyName}}';
{{/each}}
{{#each SearchOperations}}
import { {{cs_name Name}} } from './{{cml_case Name}}';
{{/each}}

// routes here are relative to the parent route, defined in App.tsx
export const {{cs_name Name}}Component = ():React.ReactElement => {

    return (<Routes>
            {{#if Paged}}
            <Route path='/' element={<{{cs_name SelectAllType.Name}}ListPaged />} />
            {{else}}
            <Route path='/' element={<{{cs_name SelectAllType.Name}}List />} />             
            {{/if}}
            {{#if CanDelete}}
            <Route path='/delete/:id' element={<{{cs_name Name}}ConfirmDelete />} />
            {{/if}}
            {{#if HasDetails}}
            <Route path='/detail/:id' element={<{{cs_name Name}}Detail />} />
            {{/if}}
            {{#each OperationsWithUIThatChangeData}}
            <Route path='/{{kb_case FriendlyName}}{{#each NavigationParameters}}/:{{cml_case Name}}{{/each}}' element={<{{cs_name RelatedType.Name}}{{FriendlyName}} />} />
            {{/each}}
            {{#each SearchOperations}}
            <Route path='/{{kb_case FriendlyName}}' element={<{{cs_name Name}} />} />
            {{/each}}
            <Route path='/*' element={<NotFound />} />
        </Routes>);
}