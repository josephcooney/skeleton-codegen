// generated by a tool
using Npgsql;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading.Tasks;
using {{cs_name Namespace}}.Data.Domain;
using {{cs_name Namespace}}.Data.Repository;
{{#if HasCustomResultType}}
using {{cs_name Namespace}}.Data.Model;
{{/if}}

namespace {{cs_name Namespace}}.Data.Test.Repository
{
    public partial class {{cs_name Type.Name}}InMemoryRepository : I{{cs_name Type.Name}}Repository
    {
    {{#each DistinctReturnTypes}}
        public {{{Returns}}} {{cs_name TypeName}}Result = new {{{Returns}}}();
    {{/each}}            
            
        {{#each Operations}}

        public virtual {{{Returns}}} {{cs_name BareName}}({{#each Parameters}}{{{ResolvedClrType}}} {{cml_case Name}}{{#unless @last}}, {{/unless}}{{/each}})
        {
            {{#if HasParameters}}
            {{else}}
                
            {{/if}}
        }

		public virtual async {{#if NoResult}}Task{{else}}Task<{{{Returns}}}>{{/if}} {{cs_name BareName}}Async({{#each Parameters}}{{{ResolvedClrType}}} {{cml_case Name}}{{#unless @last}}, {{/unless}}{{/each}})
        {
            {{#if HasParameters}}
            {{else}}
            {{/if}}
        }
        {{/each}}
    }
}